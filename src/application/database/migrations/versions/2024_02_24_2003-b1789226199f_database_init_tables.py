"""Database init tables

Revision ID: b1789226199f
Revises: 
Create Date: 2024-02-24 20:03:24.101579

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "b1789226199f"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "achievement",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("category", sa.Enum(name="achievementcategoryenum"), nullable=False),
        sa.Column("total", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "group",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("privacy", sa.Enum("PUBLIC", "PRIVATE", name="groupprivacyenum"), nullable=False),
        sa.Column("code", sa.String(), nullable=True),
        sa.Column("code_expire_time", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
        sa.UniqueConstraint("name"),
    )
    op.create_table("occupancy_category", sa.Column("id", sa.Integer(), nullable=False), sa.PrimaryKeyConstraint("id"))
    op.create_table(
        "subscription_period",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("unit", sa.Enum("DAY", "WEEK", "MONTH", name="subscriptionperiodunitenum"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", "FR", name="languageenum"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "achievement_progress",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("achievement_id", sa.Integer(), nullable=False),
        sa.Column("entity_name", sa.String(), nullable=False),
        sa.Column("entity_pointer", sa.String(), nullable=False),
        sa.Column("counter", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("status", sa.Enum("ACTIVE", "FINISH", name="achievementstatusenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["achievement_id"],
            ["achievement.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "achievement_translate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("achievement_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", "FR", name="languageenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["achievement_id"],
            ["achievement.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "group_score",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("operation", sa.Enum("PLUS", "MINUS", name="scoreoperationenum"), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["group.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mission",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("author", sa.String(), nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["occupancy_category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "occupancy_category_translate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", "FR", name="languageenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["occupancy_category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("category_id", "language"),
    )
    op.create_table(
        "subscription",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("type", sa.Enum("USUAL", "PREMIUM", name="subscriptiontypeenum"), nullable=False),
        sa.Column("period_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["period_id"],
            ["subscription_period.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["occupancy_category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_contact",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("PHONE", "MAIL", "TELEGRAM", "WHATSAPP", "GMAIL", "FACEBOOK", "CUSTOM", name="contacttypeenum"),
            nullable=False,
        ),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("is_favorite", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "value", "type", name="uq_user_contact_user_id_values_types"),
    )
    op.create_index(
        "ix_uq_user_id_is_favorite",
        "user_contact",
        ["user_id", "is_favorite"],
        unique=True,
        postgresql_where=sa.text("is_favorite IS true"),
    )
    op.create_table(
        "user_group",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("role", sa.Enum("SUPERUSER", "ADMIN", "USER", "BLOCKED", name="grouproleenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["group.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "group_id"),
    )
    op.create_table(
        "user_score",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("operation", sa.Enum("PLUS", "MINUS", name="scoreoperationenum"), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "group_mission",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("mission_id", sa.Integer(), nullable=False),
        sa.Column("author", sa.String(), nullable=False),
        sa.Column("meeting_date", sa.DateTime(), nullable=True),
        sa.Column("people_required", sa.Integer(), nullable=True),
        sa.Column("people_max", sa.Integer(), nullable=True),
        sa.Column("place", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column("date_start", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("date_close", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "status", sa.Enum("ACTIVE", "FINISH", "REJECT", "OVERDUE", name="occupancystatusenum"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["group.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mission_id"],
            ["mission.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mission_translate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("instruction", sa.String(), nullable=False),
        sa.Column("mission_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", "FR", name="languageenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["mission_id"],
            ["mission.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("mission_id", "language"),
    )
    op.create_table(
        "subscription_translate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("subscription_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", "FR", name="languageenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["subscription_id"],
            ["subscription.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_translate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", "FR", name="languageenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_mission",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("mission_id", sa.Integer(), nullable=False),
        sa.Column("date_start", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("date_close", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "status", sa.Enum("ACTIVE", "FINISH", "REJECT", "OVERDUE", name="occupancystatusenum"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["mission_id"],
            ["mission.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_subscription",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("subscription_id", sa.Integer(), nullable=False),
        sa.Column("cancelled", sa.Boolean(), nullable=False),
        sa.Column("until_date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["subscription_id"],
            ["subscription.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_task",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("date_start", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("date_close", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "status", sa.Enum("ACTIVE", "FINISH", "REJECT", "OVERDUE", name="occupancystatusenum"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_task_plan",
        sa.Column("user_id", sa.String(), autoincrement=False, nullable=False),
        sa.Column("task_id", sa.Integer(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "task_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_task_plan")
    op.drop_table("user_task")
    op.drop_table("user_subscription")
    op.drop_table("user_mission")
    op.drop_table("task_translate")
    op.drop_table("subscription_translate")
    op.drop_table("mission_translate")
    op.drop_table("group_mission")
    op.drop_table("user_score")
    op.drop_table("user_group")
    op.drop_index(
        "ix_uq_user_id_is_favorite", table_name="user_contact", postgresql_where=sa.text("is_favorite IS true")
    )
    op.drop_table("user_contact")
    op.drop_table("task")
    op.drop_table("subscription")
    op.drop_table("occupancy_category_translate")
    op.drop_table("mission")
    op.drop_table("group_score")
    op.drop_table("achievement_translate")
    op.drop_table("achievement_progress")
    op.drop_table("user")
    op.drop_table("subscription_period")
    op.drop_table("occupancy_category")
    op.drop_table("group")
    op.drop_table("achievement")
    # ### end Alembic commands ###

"""Database init tables v1

Revision ID: ba580636b488
Revises: 
Create Date: 2023-04-30 15:13:07.775539

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "ba580636b488"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "achievement",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("category", sa.Enum(name="achievementcategoryenum"), nullable=False),
        sa.Column("total", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "community",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column(
            "privacy",
            sa.Enum("PUBLICK", "PRIVATE", name="communityprivacyenum"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("name"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "contact",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("type", sa.Enum("PHONE", "MAIL", name="contacttypeenum"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "occupancy_category",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "role_application",
        sa.Column("role", sa.String(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("role"),
    )
    op.create_table(
        "subscription_period",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column(
            "unit",
            sa.Enum("DAY", "WEEK", "MONTH", name="subscriptionperiodunitenum"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("username"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "achievement_progress",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("achievement_id", sa.Integer(), nullable=False),
        sa.Column("entity_name", sa.String(), nullable=False),
        sa.Column("entity_pointer", sa.String(), nullable=False),
        sa.Column("counter", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "FINISH", name="achievementstatusenum"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["achievement_id"],
            ["achievement.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "achievement_translate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("achievement_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", name="languageenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["achievement_id"],
            ["achievement.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "community_invite",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("community", sa.String(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("expire_time", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["community"],
            ["community.name"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "community_score",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("community", sa.String(), nullable=False),
        sa.Column(
            "operation",
            sa.Enum("PLUS", "MINUS", name="scoreoperationenum"),
            nullable=False,
        ),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["community"],
            ["community.name"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mission",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("author", sa.String(), nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["occupancy_category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "occupancy_category_translate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", name="languageenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["occupancy_category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "subscription",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "type",
            sa.Enum("USUAL", "PREMIUM", name="subscriptiontypeenum"),
            nullable=False,
        ),
        sa.Column("period_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["period_id"],
            ["subscription_period.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["occupancy_category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_community",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("community_name", sa.String(), nullable=False),
        sa.Column(
            "role",
            sa.Enum("SUPERUSER", "ADMIN", "USER", "BLOCKED", name="communityroleenum"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["community_name"],
            ["community.name"],
        ),
        sa.ForeignKeyConstraint(
            ["username"],
            ["user.username"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_contact",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("contact_id", sa.Integer(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["contact_id"],
            ["contact.id"],
        ),
        sa.ForeignKeyConstraint(
            ["username"],
            ["user.username"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("contact_id"),
    )
    op.create_table(
        "user_role_application",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role"],
            ["role_application.role"],
        ),
        sa.ForeignKeyConstraint(
            ["username"],
            ["user.username"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_score",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column(
            "operation",
            sa.Enum("PLUS", "MINUS", name="scoreoperationenum"),
            nullable=False,
        ),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["username"],
            ["user.username"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "community_mission",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("meeting_date", sa.DateTime(), nullable=False),
        sa.Column("people_required", sa.Integer(), nullable=True),
        sa.Column("people_max", sa.Integer(), nullable=True),
        sa.Column("place", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column("community", sa.String(), nullable=False),
        sa.Column("mission_id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "FINISH", "REJECT", "OVERDUE", name="occupancystatusenum"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["community"],
            ["community.name"],
        ),
        sa.ForeignKeyConstraint(
            ["mission_id"],
            ["mission.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mission_translate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("instruction", sa.String(), nullable=False),
        sa.Column("mission_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", name="languageenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["mission_id"],
            ["mission.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "subscription_translate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("subscription_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", name="languageenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["subscription_id"],
            ["subscription.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_translate",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.Enum("RU", "EN", name="languageenum"), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_mission",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), autoincrement=False, nullable=False),
        sa.Column("mission_id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "FINISH", "REJECT", "OVERDUE", name="occupancystatusenum"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["mission_id"],
            ["mission.id"],
        ),
        sa.ForeignKeyConstraint(
            ["username"],
            ["user.username"],
        ),
        sa.PrimaryKeyConstraint("id", "username", "mission_id"),
    )
    op.create_table(
        "user_subscription",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("subscription_id", sa.Integer(), nullable=False),
        sa.Column("cancelled", sa.Boolean(), nullable=False),
        sa.Column("until_date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["subscription_id"],
            ["subscription.id"],
        ),
        sa.ForeignKeyConstraint(
            ["username"],
            ["user.username"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_task",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "FINISH", "REJECT", "OVERDUE", name="occupancystatusenum"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["username"],
            ["user.username"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_task")
    op.drop_table("user_subscription")
    op.drop_table("user_mission")
    op.drop_table("task_translate")
    op.drop_table("subscription_translate")
    op.drop_table("mission_translate")
    op.drop_table("community_mission")
    op.drop_table("user_score")
    op.drop_table("user_role_application")
    op.drop_table("user_contact")
    op.drop_table("user_community")
    op.drop_table("task")
    op.drop_table("subscription")
    op.drop_table("occupancy_category_translate")
    op.drop_table("mission")
    op.drop_table("community_score")
    op.drop_table("community_invite")
    op.drop_table("achievement_translate")
    op.drop_table("achievement_progress")
    op.drop_table("user")
    op.drop_table("subscription_period")
    op.drop_table("role_application")
    op.drop_table("occupancy_category")
    op.drop_table("contact")
    op.drop_table("community")
    op.drop_table("achievement")
    # ### end Alembic commands ###
